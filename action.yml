name: 'OpenFGA Model Testing Action'
description: 'Github Action for testing your OpenFGA Authorization Model'
branding:
  icon: 'align-center'
  color: 'green'

inputs:
  test_path:
    description: 'Path to the test file or folder'
    required: false
    default: '.'
  test_files_pattern:
    description: 'Pattern to match the test files'
    required: false
    default: '*.fga.yaml'
  fga_server_url:
    description: 'The OpenFGA server to test the Authorization Model against. If not provided, the tests will be run using the cli built-in OpenFGA instance.'
    required: false
    default: ''
  fga_server_store_id:
    description: 'The OpenFGA server store id. Must be provided if fga_server_url is configured.'
    required: false
    default: ''
  fga_api_token:
    description: 'The api token to use for testing against an OpenFGA server. Ignored if fga_server_url is not provided.'
    required: false
    default: ''


runs:
  using: composite
  steps:
    - name: Install OpenFGA CLI
      uses: jaxxstorm/action-install-gh-release@v1.11.0
      with:
        repo: openfga/cli
        cache: enable
    - name: Run OpenFGA CLI
      shell: bash
      run: |
        fga_opts=""
        fga_token="${{ inputs.fga_api_token }}"
        if [[ -n "${{ inputs.fga_server_url }}" ]]; then
          if [[ -z "${{ inputs.fga_server_store_id }}" ]]; then
            echo "missing store id for specified OpenFGA server ${{ inputs.fga_server_url }}."
            exit 1
          fi
          fga_opts="--api-url ${{ inputs.fga_server_url }} --store-id ${{ inputs.fga_server_store_id }}  ${fga_token:+--api-token ${fga_token}}"
        fi
        
        while IFS= read -r -d '' test_file
        do
          ((test_files_count+=1))
          echo "Running FGA test file ${test_file}"
          fga model test ${fga_opts} --tests "${test_file}"
        done <   <(find ${{ inputs.test_path }} -name "${{ inputs.test_files_pattern }}" -print0)
        
        if [[ ${test_files_count} -eq 0 ]]; then
          echo "No FGA test file found for path '${{ inputs.test_path }}' and pattern '${{ inputs.test_files_pattern }}'"
          exit 1
        fi